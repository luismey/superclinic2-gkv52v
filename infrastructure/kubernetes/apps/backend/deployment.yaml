# Kubernetes Deployment configuration for Porfin Backend Service
# Version: apps/v1
# Purpose: Defines container specifications, scaling policies, and high-availability settings
# for the FastAPI backend application with zero-downtime deployment capabilities

apiVersion: apps/v1
kind: Deployment
metadata:
  name: porfin-backend
  namespace: porfin-system
  labels:
    app: porfin
    component: backend
    environment: ${ENV}
    managed-by: kustomize
    version: ${IMAGE_TAG}
  annotations:
    # Deployment strategy annotations
    kubernetes.io/change-cause: "Release ${IMAGE_TAG}"
    deployment.kubernetes.io/revision: "1"
    
    # Prometheus monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
    
    # Security compliance
    security.compliance/data-classification: "restricted"
    security.compliance/lgpd-compliant: "true"

spec:
  # High availability configuration
  replicas: 3
  selector:
    matchLabels:
      app: porfin
      component: backend
  
  # Zero-downtime deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  template:
    metadata:
      labels:
        app: porfin
        component: backend
        environment: ${ENV}
        version: ${IMAGE_TAG}
      annotations:
        # Pod security annotations
        container.seccomp.security.alpha.kubernetes.io/porfin-backend: runtime/default
        container.apparmor.security.beta.kubernetes.io/porfin-backend: runtime/default
    
    spec:
      # Service account configuration
      serviceAccountName: porfin-backend
      automountServiceAccountToken: true
      
      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      
      # Pod scheduling configuration
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
      
      # Container configuration
      containers:
      - name: porfin-backend
        image: gcr.io/${PROJECT_ID}/porfin-backend:${IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        
        # Security context for container
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Resource requirements
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "2Gi"
        
        # Environment configuration
        envFrom:
        - configMapRef:
            name: app-config
        
        # Port configuration
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        # Health probes
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache
      
      # Volume configuration
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: "256Mi"
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: "512Mi"
      
      # Pod termination configuration
      terminationGracePeriodSeconds: 30
      
      # Node selection
      nodeSelector:
        cloud.google.com/gke-nodepool: backend-pool
      
      # Pod disruption budget reference
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300